{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\user-manager\\\\src\\\\components\\\\Users\\\\UsersList.js\";\nimport React from \"react\";\nimport classes from \"./UsersList.module.css\";\nimport Card from \"../UI/Card\";\n\n/*\r\nThis component is going to take the list items and store them\r\nin a list. This list needs to be dynamically rendered..\r\n\r\nThe new user will be passed up through props.\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = props => {\n  /*need to receive list item first*/\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.users,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.users.map(user =>\n      /*#__PURE__*/\n      /*Each list item is going to show a user who has\r\n      been added to the list.\r\n      \r\n      Each user has username and age props\r\n      */\n      _jsxDEV(\"li\", {\n        children: [user.name, \" (\", user.age, \" years old)\"]\n      }, Math.random().toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","classes","Card","UsersList","props","users","map","user","name","age","Math","random","toString"],"sources":["C:/workspace/react_practice/udemy-projects-again/user-manager/src/components/Users/UsersList.js"],"sourcesContent":["import React from \"react\";\r\nimport classes from \"./UsersList.module.css\";\r\nimport Card from \"../UI/Card\";\r\n\r\n/*\r\nThis component is going to take the list items and store them\r\nin a list. This list needs to be dynamically rendered..\r\n\r\nThe new user will be passed up through props.\r\n*/\r\n\r\nconst UsersList = (props) => {\r\n  /*need to receive list item first*/\r\n  return (\r\n    <Card className={classes.users}>\r\n    <ul>\r\n      {props.users.map((user) => (\r\n        /*Each list item is going to show a user who has\r\n        been added to the list.\r\n        \r\n        Each user has username and age props\r\n        */\r\n        <li key={Math.random().toString()}>{user.name} ({user.age} years old)</li>\r\n      ))}\r\n    </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA;AACA;AACA;AACA;AACA;AALA;AAOA,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B;EACA,oBACE,QAAC,IAAI;IAAC,SAAS,EAAEH,OAAO,CAACI,KAAM;IAAA,uBAC/B;MAAA,UACGD,KAAK,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI;MAAA;MACpB;AACR;AACA;AACA;AACA;MACQ;QAAA,WAAoCA,IAAI,CAACC,IAAI,QAAID,IAAI,CAACE,GAAG;MAAA,GAAhDC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;QAAA;QAAA;QAAA;MAAA,QAClC;IAAC;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACE;AAEX,CAAC;AAAC,KAhBIT,SAAS;AAkBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}