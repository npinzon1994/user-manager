{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\user-manager\\\\src\\\\components\\\\Users\\\\NewUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport classes from \"./NewUser.module.css\";\nimport Card from \"../UI/Card.js\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewUser = props => {\n  _s();\n  //need state to capture user input\n  const [enteredUsername, setEnteredUsername] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n\n  /*\r\n  Could check to see if entered username in empty,\r\n  in which case we could make the label and input\r\n  appear red. We can simply return if the user \r\n  entered nothing, and then return the entered username\r\n  if the field is valid.\r\n  */\n  const usernameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n  const addUserHandler = event => {\n    event.preventDefault();\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      return;\n    }\n\n    /*\r\n    enteredAge was collected from an input and is \r\n    therefore a string. JS allows you to compare strings\r\n    and numbers, but it's a better practice to force-\r\n    convert to a number so we're comparing two values\r\n    of the same type.\r\n    */\n    if (+enteredAge < 1) {\n      return;\n    }\n\n    //This is where we need to create the object.\n    const newUser = {\n      key: Math.random().toString(),\n      name: enteredUsername,\n      age: enteredAge\n    };\n\n    /*now we pass it up to App.js through props.\r\n    We have to pass to App.js because that's this\r\n    component's direct parent.\r\n    */\n    props.onSaveUser(newUser);\n    setEnteredUsername(\"\");\n    setEnteredAge(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        onChange: usernameChangeHandler,\n        value: enteredUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age (Years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"age\",\n        type: \"number\",\n        onChange: ageChangeHandler,\n        value: enteredAge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: addUserHandler,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(NewUser, \"ysyiUzxXn9R514mlTq+k9dFM1J8=\");\n_c = NewUser;\nexport default NewUser;\nvar _c;\n$RefreshReg$(_c, \"NewUser\");","map":{"version":3,"names":["React","useState","classes","Card","Button","NewUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","usernameChangeHandler","event","target","value","ageChangeHandler","addUserHandler","preventDefault","trim","length","newUser","key","Math","random","toString","name","age","onSaveUser","input"],"sources":["C:/workspace/react_practice/udemy-projects-again/user-manager/src/components/Users/NewUser.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport classes from \"./NewUser.module.css\";\r\nimport Card from \"../UI/Card.js\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst NewUser = (props) => {\r\n  //need state to capture user input\r\n  const [enteredUsername, setEnteredUsername] = useState(\"\");\r\n  const [enteredAge, setEnteredAge] = useState(\"\");\r\n\r\n  /*\r\n  Could check to see if entered username in empty,\r\n  in which case we could make the label and input\r\n  appear red. We can simply return if the user \r\n  entered nothing, and then return the entered username\r\n  if the field is valid.\r\n  */\r\n  const usernameChangeHandler = (event) => {\r\n    setEnteredUsername(event.target.value);\r\n  };\r\n\r\n  const ageChangeHandler = (event) => {\r\n    setEnteredAge(event.target.value);\r\n  };\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    /*\r\n    enteredAge was collected from an input and is \r\n    therefore a string. JS allows you to compare strings\r\n    and numbers, but it's a better practice to force-\r\n    convert to a number so we're comparing two values\r\n    of the same type.\r\n    */\r\n    if (+enteredAge < 1) {\r\n      return;\r\n    }\r\n\r\n    //This is where we need to create the object.\r\n    const newUser = {\r\n      key: Math.random().toString(),\r\n      name: enteredUsername,\r\n      age: enteredAge,\r\n    };\r\n\r\n    /*now we pass it up to App.js through props.\r\n    We have to pass to App.js because that's this\r\n    component's direct parent.\r\n    */\r\n    props.onSaveUser(newUser);\r\n    \r\n    setEnteredUsername(\"\");\r\n    setEnteredAge(\"\");\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.input}>\r\n      <form onSubmit={addUserHandler}>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          onChange={usernameChangeHandler}\r\n          value={enteredUsername}\r\n        />\r\n\r\n        <label htmlFor=\"age\">Age (Years)</label>\r\n        <input\r\n          id=\"age\"\r\n          type=\"number\"\r\n          onChange={ageChangeHandler}\r\n          value={enteredAge}\r\n        />\r\n\r\n        <Button type=\"submit\" onClick={addUserHandler}>\r\n          Add User\r\n        </Button>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewUser;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,MAAM,MAAM,cAAc;AAAC;AAElC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEhD;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMU,qBAAqB,GAAIC,KAAK,IAAK;IACvCJ,kBAAkB,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAIH,KAAK,IAAK;IAClCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAME,cAAc,GAAIJ,KAAK,IAAK;IAChCA,KAAK,CAACK,cAAc,EAAE;IACtB,IAAIV,eAAe,CAACW,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,IAAIV,UAAU,CAACS,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACzE;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACV,UAAU,GAAG,CAAC,EAAE;MACnB;IACF;;IAEA;IACA,MAAMW,OAAO,GAAG;MACdC,GAAG,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;MAC7BC,IAAI,EAAElB,eAAe;MACrBmB,GAAG,EAAEjB;IACP,CAAC;;IAED;AACJ;AACA;AACA;IACIH,KAAK,CAACqB,UAAU,CAACP,OAAO,CAAC;IAEzBZ,kBAAkB,CAAC,EAAE,CAAC;IACtBE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACE,QAAC,IAAI;IAAC,SAAS,EAAER,OAAO,CAAC0B,KAAM;IAAA,uBAC7B;MAAM,QAAQ,EAAEZ,cAAe;MAAA,wBAC7B;QAAO,OAAO,EAAC,UAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC1C;QACE,EAAE,EAAC,UAAU;QACb,IAAI,EAAC,MAAM;QACX,QAAQ,EAAEL,qBAAsB;QAChC,KAAK,EAAEJ;MAAgB;QAAA;QAAA;QAAA;MAAA,QACvB,eAEF;QAAO,OAAO,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACxC;QACE,EAAE,EAAC,KAAK;QACR,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAEQ,gBAAiB;QAC3B,KAAK,EAAEN;MAAW;QAAA;QAAA;QAAA;MAAA,QAClB,eAEF,QAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEO,cAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAErC;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACF;AAEX,CAAC;AAAC,GA/EIX,OAAO;AAAA,KAAPA,OAAO;AAiFb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}