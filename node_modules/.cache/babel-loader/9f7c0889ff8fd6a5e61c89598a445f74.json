{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\user-manager\\\\src\\\\components\\\\Users\\\\NewUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport classes from \"./NewUser.module.css\";\nimport Card from \"../UI/Card.js\";\nimport Button from \"../UI/Button\";\nimport Modal from \"../UI/Modal\";\nimport Wrapper from \"../Helpers/Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewUser = props => {\n  _s();\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredNameValue = nameInputRef.current.value;\n    const enteredAgeValue = ageInputRef.current.value;\n    if (enteredNameValue.trim().length === 0 || enteredAgeValue.trim().length === 0) {\n      setMessage(\"Please enter a username or age!\");\n      setIsModalVisible(true);\n      return;\n    }\n\n    /*\r\n    enteredAge was collected from an input and is \r\n    therefore a string. JS allows you to compare strings\r\n    and numbers, but it's a better practice to force-\r\n    convert to a number so we're comparing two values\r\n    of the same type.\r\n    */\n    if (+enteredAgeValue < 1) {\n      setMessage(\"Age cannot be less than 1!\");\n      setIsModalVisible(true);\n      return;\n    }\n\n    /*Now pass it up to App.js through props.\r\n    We have to pass to App.js because that's this\r\n    component's direct parent. App.js is where we\r\n    actually create the object.\r\n    */\n    props.onSaveUser(enteredNameValue, enteredAgeValue);\n    //can manipulate DOM directly to reset inputs, but not usually\n    nameInputRef.current.value = \"\";\n    ageInputRef.current.value = \"\";\n  };\n  const closeModalHandler = () => {\n    setIsModalVisible(false);\n  };\n\n  //only display modal if isModalVisible\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [isModalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Error!\",\n      message: message,\n      onClose: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: addUserHandler,\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(NewUser, \"5rgYzR5yp5rg6A7d4NGz0xXTaAc=\");\n_c = NewUser;\nexport default NewUser;\nvar _c;\n$RefreshReg$(_c, \"NewUser\");","map":{"version":3,"names":["React","useState","useRef","classes","Card","Button","Modal","Wrapper","NewUser","props","nameInputRef","ageInputRef","isModalVisible","setIsModalVisible","message","setMessage","addUserHandler","event","preventDefault","enteredNameValue","current","value","enteredAgeValue","trim","length","onSaveUser","closeModalHandler","input"],"sources":["C:/workspace/react_practice/udemy-projects-again/user-manager/src/components/Users/NewUser.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport classes from \"./NewUser.module.css\";\r\nimport Card from \"../UI/Card.js\";\r\nimport Button from \"../UI/Button\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Wrapper from \"../Helpers/Wrapper\";\r\n\r\nconst NewUser = (props) => {\r\n  const nameInputRef = useRef();\r\n  const ageInputRef = useRef();\r\n  \r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredNameValue = nameInputRef.current.value;\r\n    const enteredAgeValue = ageInputRef.current.value;\r\n    if (enteredNameValue.trim().length === 0 || enteredAgeValue.trim().length === 0) {\r\n      setMessage(\"Please enter a username or age!\");\r\n      setIsModalVisible(true);\r\n      return;\r\n    }\r\n\r\n    /*\r\n    enteredAge was collected from an input and is \r\n    therefore a string. JS allows you to compare strings\r\n    and numbers, but it's a better practice to force-\r\n    convert to a number so we're comparing two values\r\n    of the same type.\r\n    */\r\n    if (+enteredAgeValue < 1) {\r\n      setMessage(\"Age cannot be less than 1!\");\r\n      setIsModalVisible(true);\r\n      return;\r\n    }\r\n\r\n    /*Now pass it up to App.js through props.\r\n    We have to pass to App.js because that's this\r\n    component's direct parent. App.js is where we\r\n    actually create the object.\r\n    */\r\n    props.onSaveUser(enteredNameValue, enteredAgeValue);\r\n    //can manipulate DOM directly to reset inputs, but not usually\r\n    nameInputRef.current.value = \"\";\r\n    ageInputRef.current.value = \"\";\r\n\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  //only display modal if isModalVisible\r\n  return (\r\n    <Wrapper>\r\n      {isModalVisible && (\r\n        <Modal title=\"Error!\" message={message} onClose={closeModalHandler} />\r\n      )}\r\n      <Card className={classes.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            ref={nameInputRef}\r\n          />\r\n\r\n          <label htmlFor=\"age\">Age (Years)</label>\r\n          <input\r\n            id=\"age\"\r\n            type=\"number\"\r\n            ref={ageInputRef}\r\n          />\r\n\r\n          <Button type=\"submit\" onClick={addUserHandler}>\r\n            Add User\r\n          </Button>\r\n        </form>\r\n      </Card>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NewUser;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,OAAO,MAAM,oBAAoB;AAAC;AAEzC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAMC,YAAY,GAAGR,MAAM,EAAE;EAC7B,MAAMS,WAAW,GAAGT,MAAM,EAAE;EAE5B,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAG1C,MAAMe,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,gBAAgB,GAAGT,YAAY,CAACU,OAAO,CAACC,KAAK;IACnD,MAAMC,eAAe,GAAGX,WAAW,CAACS,OAAO,CAACC,KAAK;IACjD,IAAIF,gBAAgB,CAACI,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,IAAIF,eAAe,CAACC,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MAC/ET,UAAU,CAAC,iCAAiC,CAAC;MAC7CF,iBAAiB,CAAC,IAAI,CAAC;MACvB;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACS,eAAe,GAAG,CAAC,EAAE;MACxBP,UAAU,CAAC,4BAA4B,CAAC;MACxCF,iBAAiB,CAAC,IAAI,CAAC;MACvB;IACF;;IAEA;AACJ;AACA;AACA;AACA;IACIJ,KAAK,CAACgB,UAAU,CAACN,gBAAgB,EAAEG,eAAe,CAAC;IACnD;IACAZ,YAAY,CAACU,OAAO,CAACC,KAAK,GAAG,EAAE;IAC/BV,WAAW,CAACS,OAAO,CAACC,KAAK,GAAG,EAAE;EAEhC,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAM;IAC9Bb,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,oBACE,QAAC,OAAO;IAAA,WACLD,cAAc,iBACb,QAAC,KAAK;MAAC,KAAK,EAAC,QAAQ;MAAC,OAAO,EAAEE,OAAQ;MAAC,OAAO,EAAEY;IAAkB;MAAA;MAAA;MAAA;IAAA,QACpE,eACD,QAAC,IAAI;MAAC,SAAS,EAAEvB,OAAO,CAACwB,KAAM;MAAA,uBAC7B;QAAM,QAAQ,EAAEX,cAAe;QAAA,wBAC7B;UAAO,OAAO,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eAC1C;UACE,EAAE,EAAC,UAAU;UACb,IAAI,EAAC,MAAM;UACX,GAAG,EAAEN;QAAa;UAAA;UAAA;UAAA;QAAA,QAClB,eAEF;UAAO,OAAO,EAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACxC;UACE,EAAE,EAAC,KAAK;UACR,IAAI,EAAC,QAAQ;UACb,GAAG,EAAEC;QAAY;UAAA;UAAA;UAAA;QAAA,QACjB,eAEF,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAEK,cAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAErC;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GA5EIR,OAAO;AAAA,KAAPA,OAAO;AA8Eb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}